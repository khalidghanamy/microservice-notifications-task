
services:
  # Notification Microservice
  notification-service:
    build:
      context: .
      target: dev
    container_name: notification-microservice
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_URI=mongodb://mongo:27017/notification-service
    depends_on:
      - redis
      - mongo
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - microservice-network
    restart: unless-stopped

  # Redis for pub/sub messaging
  redis:
    image: redis:latest
    container_name: notification-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - microservice-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # MongoDB for notification storage
  mongo:
    image: mongo:latest
    container_name: notification-mongo
    ports:
      - "27017:27017"
    

    volumes:
      - mongo_data:/data/db1
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - microservice-network
    restart: unless-stopped

  # Redis Commander (Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-gui
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - microservice-network
    restart: unless-stopped


volumes:
  redis_data:
  mongo_data:

networks:
  microservice-network:
    driver: bridge
